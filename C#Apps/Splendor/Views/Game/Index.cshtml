@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model Splendor.Models.IGameBoard
@{
    ViewData["Title"] = "Splendor";


    string purple = "rgb(110, 10, 150)";

}

<!-- Pull for game state -->
    <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
    <script type="text/javascript">
    // This sets up a call every 5 seconds to see if something has change.
    // Need to add logic to not make this call when it is the current players turn
    // Need to add logic so that when the current player has completed their turn that we start the pulling again.
    setTimeout(pull, 5000);
    function pull() {
        //alert("pull was called");
        $.ajax({
            url: "/Game/State/@ViewData["GameID"]/@ViewData["PlayerID"]",
            type: "GET",
            success: function (response) {
                // TODO: add code here to update state in the browser.  Need to change the object
                // returned so that there is a timestamp or version value so it is easy to determine
                // if something changed and the game board needs to be changed. 
                //alert("CurrentPlayer: " + response.currentPlayer);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert(xhr.status);
                alert(thrownError);
            }
        });
        setTimeout(pull, 5000);
        return false;
    }
    </script>

<!-- Options Screen -->

    <section id="OptionsScreen" class="OverlayScreen" style="display: none;">
        <div class="mx-auto pt-5" style="width: 100%">
            <h1 class="mt-5 px-auto text-light display-1 text-center " style="width: 100%">Options</h1>
        </div>
        <div style="margin-top: 23rem;">

            <div class="mx-auto purple" style="width: 150px;">
                <button class="mx-auto btn btn-outline-purple btn-lg fw-bold" style="width: 150px; border: 2px solid var(--purple);" onclick='ToggleScreen("OptionsScreen")'>Resume</button> 
            </div>
            <div class="mx-auto my-2" style="width: 200px;">
                <button class="mx-auto btn btn-outline-danger btn-lg" style="width: 200px;" onclick='ToggleScreen("OptionsScreen")'>Exit Game</button> 
            </div>
            <div class="mx-auto my-2" style="width: 150px;">
                <a class="mx-auto btn btn-outline-success btn-lg" style="width: 150px;" href="https://cdn.1j1ju.com/medias/7f/91/ba-splendor-rulebook.pdf" target="_blank" rel="noopener noreferrer" >Rules</a> 
            </div>
        </div>
    </section>

<!-- Options button -->
    <nav class="navbar">   
        <script>
            
        </script>
        <div class="mx-3 btn" onclick='ToggleScreen("OptionsScreen")' > 
            @for (int i = 0; i < 3; i++)
            {
                <svg width="0.8rem" height="1rem">
                    <circle cx="50%" cy="50%" r="5" fill="gray"/>
                </svg>
            }
         </div>
    </nav>

<!-- Card Screen -->
    <section id="CardScreen" class="OverlayScreen">
    </section>

<!-- Noble Screen -->
    <section id="NobleScreen" class="OverlayScreen">
    </section>


<section class="container row mx-auto p-2 maxContainer">

    <!-- Player Stats -->
        <section class="col-12 m-0 mt-5 p-2
                        col-lg-6 mt-lg-5 m-lg-0 p-lg-4">
            @{ string borderColor = "gray"; }
            @for (int i = 0; i < Model.Players.Count; i++)
            {
                @if (i == Model.CurrentPlayer)
                {
                    borderColor = @purple;
                }
                else
                {
                    borderColor = "gray";
                }

                <section class="container row rounded-3 mt-3 mx-auto pb-1" style="border: 2px solid @borderColor;">
                    <div class="col-12 container
                                col-md-6
                                col-lg-12
                                playerStatsContainer">
                        <h3 class="row">@Model.Players[i].Name</h3>
                        <table class="mb-1">
                            <!--Total of Tokens + Cards-->
                                <tr>
                                    <th></th>
                                    @{
                                        Dictionary<Token, string> Colors = new Dictionary<Token, string>() { { Token.Emerald, "green" }, { Token.Diamond, "white" }, { Token.Sapphire, "blue" }, { Token.Onyx, "brown" }, { Token.Ruby, "red" } };
                                    }
                                        @foreach(KeyValuePair<Token, string> kvp in Colors)
                                        {
                                            <th>
                                                <svg class="playerStats">
                                                    <text id='@Model.Players[i].Name-Total:@kvp.Key' x="50%" y="50%" text-anchor="middle" fill=@kvp.Value stroke="black" font-size="2rem" stroke-width="1px" dy=".35em">@(Model.Players[i].Tokens[kvp.Key] + Model.Players[i].CardTokens[kvp.Key])</text>
                                                </svg>
                                            </th>
                                        }

                                        <th>
                                            <svg class="playerStats">
                                                    <text id="@Model.Players[i].Name-Total:Gold" x="50%" y="50%" text-anchor="middle" fill="yellow" stroke="black" font-size="2rem" stroke-width="1px" dy=".35em">@Model.Players[i].Tokens[Token.Gold]</text>
                                                </svg>
                                        </th>
                                </tr>

                            <!--Total Tokens-->
                                <tr>
                                    <td>
                                        <svg class="playerStats">
                                            <text id="@Model.Players[i].Name-TokenTotal" x="50%" y="50%" text-anchor="middle" fill="gray" stroke="black" font-size="2rem" stroke-width="1px" dy=".35em">@Model.Players[i].NumberOfTokens()</text>
                                        </svg>
                                    </td>
                                    @foreach(KeyValuePair<Token, string> kvp in Colors)
                                    {
                                        <td>
                                            <svg class="playerStats">
                                                <circle cx="50%" cy="50%" r="20" fill=@kvp.Value />
                                                <text id="@Model.Players[i].Name-Token:@kvp.Key" x="50%" y="50%" text-anchor="middle" fill="gray" stroke="black" font-size="2rem" stroke-width="1px" dy=".35em">@Model.Players[i].Tokens[kvp.Key]</text>
                                            </svg>
                                        </td>
                                    }

                                    <td>
                                        <svg class="playerStats">
                                            <circle cx="50%" cy="50%" r="20" fill="yellow" />
                                            <text id="@Model.Players[i].Name-Token:Gold" x="50%" y="50%" text-anchor="middle" fill="gray" stroke="black" font-size="2rem" stroke-width="1px" dy=".35em">@Model.Players[i].Tokens[Token.Gold]</text>
                                        </svg>
                                    </td>
                                </tr>

                            <!--Total Cards and Prestige Points-->
                                <tr>
                                    <td>
                                        <svg class="playerStats">
                                            <text id="@Model.Players[i].Name-PrestigePoints" x="50%" y="50%" text-anchor="middle" fill="gray" stroke="black" font-size="2rem" stroke-width="1px" dy=".35em">@Model.Players[i].PrestigePoints</text>
                                        </svg>
                                    </td>
                                    @foreach(KeyValuePair<Token, string> kvp in Colors)
                                    {
                                        <td>
                                            <svg class="playerStats">
                                                <rect x="10%" rx="10" ry="10" width="2.4rem" height="3rem" fill=@kvp.Value />
                                                <text id="@Model.Players[i].Name-Card:@kvp.Key" x="50%" y="50%" text-anchor="middle" fill="gray" stroke="black" font-size="2rem" stroke-width="1px" dy=".35em">@Model.Players[i].CardTokens[kvp.Key]</text>
                                            </svg>
                                        </td>
                                    }
                                </tr>
                        </table>
                    </div>

                    <!-- Resereved Cards -->
                        <div id="ReservedCards" class="col-12 container position-relative
                                    col-md-6 ps-md-5 pe-md-0
                                    col-lg-12 p-lg-0
                                    playerStatsContainer">
                            <div class="row m-0" style="position: relative; top: 50%; transform: translateY(-50%);">
                                @if (Model.Players[i].ReservedCards.Count > 0)
                                {
                                    foreach (ICard card in Model.Players[i].ReservedCards)
                                    {
                                        <div class="col-4
                                                    col-sm-3
                                                    col-md-4
                                                    ">
                                            <img id="@Model.Players[i].Name-Reserved:@card.ImageName" class="col-12 p-0 card cursorHover"  maxwidth="33%" src="Images/@card.ImageName" alt=@card.ImageName onclick='CardScreen("@card.ImageName")'/>
                                        </div>
                                    }
                                }
                            </div>
                        </div>
                </section>
            }
        </section> 

    <!-- Shop -->
        <section id="Shop" class="col-12 m-0 p-2
                        col-lg-6"> 

            <!-- Tokens -->
                <section class="container mx-auto p-0 mb-5" width="100%">
                        <table class="mx-auto" width="100%">
                            <tr>
                                <td id="EmeraldTakingToken"  class="takingToken" onclick="TokenClick('TakingEmerald')"  ><img class="p-0" width="100%" src="/Images/Emerald.png"  alt="EmeraldToken"  /><h1 id="EmeraldTakingTokenValue">0</h1></td>
                                <td id="SapphireTakingToken" class="takingToken" onclick="TokenClick('TakingSapphire')" ><img class="p-0" width="100%" src="/Images/Sapphire.png" alt="SapphireToken" /><h1 id="SapphireTakingTokenValue">0</h1></td>
                                <td id="RubyTakingToken"     class="takingToken" onclick="TokenClick('TakingRuby')"     ><img class="p-0" width="100%" src="/Images/Ruby.png"     alt="RubyToken"     /><h1 id="RubyTakingTokenValue">0</h1></td>
                                <td id="DiamondTakingToken"  class="takingToken" onclick="TokenClick('TakingDiamond')"  ><img class="p-0" width="100%" src="/Images/Diamond.png"  alt="DiamondToken"  /><h1 id="DiamondTakingTokenValue">0</h1></td>
                                <td id="OnyxTakingToken"     class="takingToken" onclick="TokenClick('TakingOnyx')"     ><img class="p-0" width="100%" src="/Images/Onyx.png"     alt="OnyxToken"     /><h1 id="OnyxTakingTokenValue">0</h1></td>
                            </tr>
                            <tr>
                                <td class="token cursorHover" onclick="TokenClick('Emerald')"  ><img class="p-0" width="100%" src="/Images/Emerald.png"  alt="EmeraldToken"  /><h1 id="EmeraldTokenValue" >@Model.TokenStacks[Token.Emerald]</h1></td>
                                <td class="token cursorHover" onclick="TokenClick('Sapphire')" ><img class="p-0" width="100%" src="/Images/Sapphire.png" alt="SapphireToken" /><h1 id="SapphireTokenValue">@Model.TokenStacks[Token.Sapphire]</h1></td>
                                <td class="token cursorHover" onclick="TokenClick('Ruby')"     ><img class="p-0" width="100%" src="/Images/Ruby.png"     alt="RubyToken"     /><h1 id="RubyTokenValue"    >@Model.TokenStacks[Token.Ruby]</h1></td>
                                <td class="token cursorHover" onclick="TokenClick('Diamond')"  ><img class="p-0" width="100%" src="/Images/Diamond.png"  alt="DiamondToken"  /><h1 id="DiamondTokenValue" >@Model.TokenStacks[Token.Diamond]</h1></td>
                                <td class="token cursorHover" onclick="TokenClick('Onyx')"     ><img class="p-0" width="100%" src="/Images/Onyx.png"     alt="OnyxToken"     /><h1 id="OnyxTokenValue"    >@Model.TokenStacks[Token.Onyx]</h1></td>
                                <td class="token cursorHover" onclick="TokenClick('Gold')"     ><img class="p-0" width="100%" src="/Images/Gold.png"     alt="GoldToken"     /><h1 id="GoldTokenValue"    >@Model.TokenStacks[Token.Gold]</h1></td>

                            </tr>
                        </table>
                </section>

            <!-- Cards and Nobles -->
                <section class="container mx-auto p-1 border-purple rounded-3 border-5">

                        <table class="mx-auto">
                            <tr>
                                @foreach (INoble noble in Model.Nobles)
                                {
                                    <td><img id="@noble.ImageName" class="card cursorHover" width="100%" src="/Images/@noble.ImageName" alt="@noble" onclick='NobleScreen("@noble.ImageName")' /></td>
                                }
                            </tr>
                        </table>

                        <table class="mx-auto">
                            <tr>
                                @foreach (ICard card in Model.Level3Cards)
                                {
                                    <td><img id="@card.ImageName" class="card cursorHover" width="100%" src="/Images/@card.ImageName" alt="@card.ImageName" onclick='CardScreen("@card.ImageName")' /></td>
                            
                                }
                             </tr>
                             <tr>
                                @foreach (ICard card in Model.Level2Cards)
                                {
                                    <td><img id="@card.ImageName" class="card cursorHover" width="100%" src="/Images/@card.ImageName" alt="@card.ImageName" onclick='CardScreen("@card.ImageName")' /></td>
                            
                                }
                             </tr>
                             <tr>
                                @foreach (ICard card in Model.Level1Cards)
                                {
                                    <td><img id="@card.ImageName" class="card cursorHover" width="100%" src="/Images/@card.ImageName" alt="@card.ImageName" onclick='CardScreen("@card.ImageName")' /></td>
                            
                                }
                             </tr>
                        </table>
                </section>

        </section>

</section>
